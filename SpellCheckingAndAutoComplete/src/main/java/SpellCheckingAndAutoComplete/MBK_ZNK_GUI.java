package SpellCheckingAndAutoComplete;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class MBK_ZNK_GUI extends javax.swing.JFrame {   

    private static void loadDictionary(MBK_ZNK_BinaryST wordDictionary) {
        try ( BufferedReader reader = new BufferedReader(new FileReader("dictionary.txt"))) {            
            String line;
            while ((line = reader.readLine()) != null) {
                wordDictionary.addWord(line.trim());
            }
        } catch (IOException e) {
            System.err.println("Error loading dictionary: " + e.getMessage());
            System.exit(1);
        }
    }
    
    private String find(String s){
        String a = text.getText();        
        String temp = a;        
        int lastSpaceIndex = temp.lastIndexOf(" ");
        String lastWord = temp.substring(lastSpaceIndex + 1);        
        return lastWord;
    }
    
    
    public MBK_ZNK_GUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        suggestionsPopup = new javax.swing.JPopupMenu();
        jMenuItem = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggestion_list = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        addButton = new javax.swing.JButton();

        jMenuItem.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(22, 150, 174));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("SimSun", 1, 36)); // NOI18N
        jLabel1.setText("SPELLING CHECKER");

        suggestion_list.setBackground(new java.awt.Color(204, 225, 243));
        jScrollPane1.setViewportView(suggestion_list);

        text.setBackground(new java.awt.Color(204, 225, 243));
        text.setColumns(20);
        text.setRows(5);
        text.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                textMouseDragged(evt);
            }
        });
        text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(text);

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textKeyTyped
        String inputWord = find(text.getText());
        MBK_ZNK_BinaryST<String> wordDictionary = new MBK_ZNK_BinaryST<>();
        loadDictionary(wordDictionary);
        DefaultListModel<String> listModel = new DefaultListModel<>();
        suggestion_list.setModel(listModel);
        MBK_ZNK_BinaryST<String> suggestions = new MBK_ZNK_BinaryST<>();
       
        if (evt.getKeyChar() == '\n' && evt.isShiftDown()) {
            suggestions = wordDictionary.suggestionTree(wordDictionary, inputWord);
            String firstSuggestion = (String)suggestions.getRoot().word;
            if (firstSuggestion != null) {
                text.setText((text.getText().substring(0, text.getText().length() - inputWord.length()).trim() + " " + firstSuggestion).trim());
            } else {
                JOptionPane.showMessageDialog(null, "No suggestions found.");
            }
        }else if (inputWord.equals("")) {
            wordDictionary.fillListModelInOrder(listModel);
        }else{
            if (evt.getKeyChar() == ' ') {
                wordDictionary.fillListModelInOrder(listModel);
            }else{
                suggestions = wordDictionary.suggestionTree(wordDictionary, inputWord);
                suggestions.fillListModelInOrder(listModel);
            }
        }
    }//GEN-LAST:event_textKeyTyped

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if (suggestion_list.getSelectedValue() != null) {
            String addWord = suggestion_list.getSelectedValue();
            String inputWord = find(text.getText());
            text.setText((text.getText().substring(0, text.getText().length() - inputWord.length()).trim() + " " + addWord).trim());
        }        
    }//GEN-LAST:event_addButtonActionPerformed

    private void textMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMouseDragged
        MBK_ZNK_BinaryST<String> wordDictionary = new MBK_ZNK_BinaryST<>();
        loadDictionary(wordDictionary);
        if (text.getSelectedText() != null) {
            boolean isThere = wordDictionary.searchWord(text.getSelectedText());
            if (isThere == false) {
             text.setSelectedTextColor(Color.red);
            }else{
                text.setSelectedTextColor(Color.white);
            } 
        }        
    }//GEN-LAST:event_textMouseDragged


    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MBK_ZNK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MBK_ZNK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MBK_ZNK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MBK_ZNK_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MBK_ZNK_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> suggestion_list;
    private javax.swing.JPopupMenu suggestionsPopup;
    private javax.swing.JTextArea text;
    // End of variables declaration//GEN-END:variables

}
